import { Button, VerticalBox, HorizontalBox } from "std-widgets.slint";

component KeyButton inherits Rectangle {
    in property <string> text;
    in property <string> shift-text: "";
    in property <bool> is-tested: false;
    in property <length> key-width: 45px;
    in property <length> key-height: 45px;
    
    callback clicked(string);
    
    width: key-width;
    height: key-height;
    border-radius: 8px;
    border-width: 2px;
    border-color: is-tested ? #00E676 : #37474F;
    background: is-tested ? 
        @linear-gradient(135deg, #E8F5E8 0%, #C8E6C9 100%) : 
        @linear-gradient(135deg, #FAFAFA 0%, #F0F0F0 100%);
    drop-shadow-blur: is-tested ? 6px : 2px;
    drop-shadow-color: is-tested ? #4CAF5080 : #00000020;
    drop-shadow-offset-y: is-tested ? 3px : 1px;
    
    animate border-color, background, drop-shadow-blur, drop-shadow-offset-y { 
        duration: 200ms; 
        easing: ease-out; 
    }
    
    VerticalBox {
        alignment: center;
        spacing: 1px;
        
        if (root.shift-text != "") : Text {
            text: root.shift-text;
            font-size: 9px;
            font-weight: 500;
            color: root.is-tested ? #2E7D32 : #78909C;
            horizontal-alignment: center;
        }
        
        Text {
            text: root.text;
            font-size: root.shift-text != "" ? 13px : 15px;
            font-weight: 600;
            color: root.is-tested ? #1B5E20 : #37474F;
            horizontal-alignment: center;
        }
    }
    
    // Success checkmark overlay
    if (is-tested) : Rectangle {
        width: 16px;
        height: 16px;
        x: parent.width - 18px;
        y: 2px;
        border-radius: 8px;
        background: #4CAF50;
        
        Text {
            text: "âœ“";
            font-size: 10px;
            font-weight: 700;
            color: white;
            horizontal-alignment: center;
            vertical-alignment: center;
        }
    }
    
    TouchArea {
        clicked => {
            root.clicked(root.text);
        }
    }
}

component SpaceKey inherits KeyButton {
    key-width: 320px;
    text: "SPACE";
}

export component MainWindow inherits Window {
    title: "Modern Keyboard Tester";
    width: 1100px;
    height: 600px;
    background: @linear-gradient(135deg, #1E3A8A 0%, #3B82F6 50%, #06B6D4 100%);
    
    property <[string]> tested-keys: [];
    callback key-clicked(string);
    
    // Add keyboard focus capability
    forward-focus: focus-scope;
    
    focus-scope := FocusScope {
        key-pressed(event) => {
            if (event.text != "") {
                debug(event);
                key-clicked(event.text);
            }
            accept
        }
    }
    
    // Main container with glassmorphism effect
    Rectangle {
        width: parent.width - 40px;
        height: parent.height - 40px;
        x: 20px;
        y: 20px;
        border-radius: 20px;
        background: #FFFFFF15;
        border-width: 1px;
        border-color: #FFFFFF30;
        drop-shadow-blur: 20px;
        drop-shadow-color: #00000040;
        
        VerticalBox {
            padding: 30px;
            spacing: 25px;
            
            // Header section
            VerticalBox {
                spacing: 10px;
                
                Text {
                    text: "ðŸ”¥ Modern Keyboard Tester";
                    font-size: 28px;
                    font-weight: 800;
                    color: white;
                    horizontal-alignment: center;
                }
                
                Text {
                    text: "Test all your keys! Green = Working âœ¨";
                    font-size: 16px;
                    font-weight: 500;
                    color: #E0E7FF;
                    horizontal-alignment: center;
                }
                
                // Progress indicator
                Rectangle {
                    height: 40px;
                    border-radius: 20px;
                    background: #FFFFFF20;
                    border-width: 1px;
                    border-color: #FFFFFF30;
                    
                    HorizontalBox {
                        padding: 15px;
                        alignment: center;
                        spacing: 15px;
                        
                        Text {
                            text: "Keys Tested: " + tested-keys.length + " / 47";
                            font-size: 14px;
                            font-weight: 600;
                            color: white;
                        }
                        
                        // Progress bar
                        Rectangle {
                            width: 200px;
                            height: 8px;
                            border-radius: 4px;
                            background: #FFFFFF30;
                            
                            Rectangle {
                                width: parent.width * tested-keys.length / 47;
                                height: parent.height;
                                border-radius: 4px;
                                background: @linear-gradient(90deg, #4ADE80 0%, #22C55E 100%);
                                animate width { duration: 300ms; easing: ease-out; }
                            }
                        }
                    }
                }
            }
            
            // Keyboard section
            Rectangle {
                border-radius: 15px;
                background: #FFFFFF08;
                border-width: 1px;
                border-color: #FFFFFF20;
                drop-shadow-blur: 10px;
                drop-shadow-color: #00000030;
                
                VerticalBox {
                    padding: 20px;
                    spacing: 8px;
                    
                    // Number row
                    HorizontalBox {
                        spacing: 6px;
                        alignment: center;
                        
                        KeyButton {
                            text: "`";
                            shift-text: "~";
                            is-tested: tested-keys.contains("`") || tested-keys.contains("~");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "1";
                            shift-text: "!";
                            is-tested: tested-keys.contains("1") || tested-keys.contains("!");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "2";
                            shift-text: "@";
                            is-tested: tested-keys.contains("2") || tested-keys.contains("@");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "3";
                            shift-text: "#";
                            is-tested: tested-keys.contains("3") || tested-keys.contains("#");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "4";
                            shift-text: "$";
                            is-tested: tested-keys.contains("4") || tested-keys.contains("$");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "5";
                            shift-text: "%";
                            is-tested: tested-keys.contains("5") || tested-keys.contains("%");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "6";
                            shift-text: "^";
                            is-tested: tested-keys.contains("6") || tested-keys.contains("^");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "7";
                            shift-text: "&";
                            is-tested: tested-keys.contains("7") || tested-keys.contains("&");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "8";
                            shift-text: "*";
                            is-tested: tested-keys.contains("8") || tested-keys.contains("*");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "9";
                            shift-text: "(";
                            is-tested: tested-keys.contains("9") || tested-keys.contains("(");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "0";
                            shift-text: ")";
                            is-tested: tested-keys.contains("0") || tested-keys.contains(")");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "-";
                            shift-text: "_";
                            is-tested: tested-keys.contains("-") || tested-keys.contains("_");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "=";
                            shift-text: "+";
                            is-tested: tested-keys.contains("=") || tested-keys.contains("+");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "âŒ«";
                            key-width: 70px;
                            is-tested: tested-keys.contains("Backspace");
                            clicked(key) => { key-clicked("Backspace"); }
                        }
                    }
                    
                    // QWERTY row
                    HorizontalBox {
                        spacing: 6px;
                        alignment: center;
                        
                        KeyButton {
                            text: "Tab";
                            key-width: 65px;
                            is-tested: tested-keys.contains("Tab");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "Q";
                            is-tested: tested-keys.contains("Q") || tested-keys.contains("q");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "W";
                            is-tested: tested-keys.contains("W") || tested-keys.contains("w");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "E";
                            is-tested: tested-keys.contains("E") || tested-keys.contains("e");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "R";
                            is-tested: tested-keys.contains("R") || tested-keys.contains("r");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "T";
                            is-tested: tested-keys.contains("T") || tested-keys.contains("t");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "Y";
                            is-tested: tested-keys.contains("Y") || tested-keys.contains("y");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "U";
                            is-tested: tested-keys.contains("U") || tested-keys.contains("u");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "I";
                            is-tested: tested-keys.contains("I") || tested-keys.contains("i");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "O";
                            is-tested: tested-keys.contains("O") || tested-keys.contains("o");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "P";
                            is-tested: tested-keys.contains("P") || tested-keys.contains("p");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "[";
                            shift-text: "{";
                            is-tested: tested-keys.contains("[") || tested-keys.contains("{");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "]";
                            shift-text: "}";
                            is-tested: tested-keys.contains("]") || tested-keys.contains("}");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "\\";
                            shift-text: "|";
                            is-tested: tested-keys.contains("\\") || tested-keys.contains("|");
                            clicked(key) => { key-clicked(key); }
                        }
                    }
                    
                    // ASDF row
                    HorizontalBox {
                        spacing: 6px;
                        alignment: center;
                        
                        KeyButton {
                            text: "â‡ª";
                            key-width: 75px;
                            is-tested: tested-keys.contains("CapsLock");
                            clicked(key) => { key-clicked("CapsLock"); }
                        }
                        KeyButton {
                            text: "A";
                            is-tested: tested-keys.contains("A") || tested-keys.contains("a");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "S";
                            is-tested: tested-keys.contains("S") || tested-keys.contains("s");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "D";
                            is-tested: tested-keys.contains("D") || tested-keys.contains("d");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "F";
                            is-tested: tested-keys.contains("F") || tested-keys.contains("f");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "G";
                            is-tested: tested-keys.contains("G") || tested-keys.contains("g");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "H";
                            is-tested: tested-keys.contains("H") || tested-keys.contains("h");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "J";
                            is-tested: tested-keys.contains("J") || tested-keys.contains("j");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "K";
                            is-tested: tested-keys.contains("K") || tested-keys.contains("k");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "L";
                            is-tested: tested-keys.contains("L") || tested-keys.contains("l");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: ";";
                            shift-text: ":";
                            is-tested: tested-keys.contains(";") || tested-keys.contains(":");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "'";
                            shift-text: "\"";
                            is-tested: tested-keys.contains("'") || tested-keys.contains("\"");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "â†µ";
                            key-width: 85px;
                            is-tested: tested-keys.contains("Enter") || tested-keys.contains("\n");
                            clicked(key) => { key-clicked("Enter"); }
                        }
                    }
                    
                    // ZXCV row
                    HorizontalBox {
                        spacing: 6px;
                        alignment: center;
                        
                        KeyButton {
                            text: "â‡§";
                            key-width: 95px;
                            is-tested: tested-keys.contains("Shift");
                            clicked(key) => { key-clicked("Shift"); }
                        }
                        KeyButton {
                            text: "Z";
                            is-tested: tested-keys.contains("Z") || tested-keys.contains("z");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "X";
                            is-tested: tested-keys.contains("X") || tested-keys.contains("x");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "C";
                            is-tested: tested-keys.contains("C") || tested-keys.contains("c");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "V";
                            is-tested: tested-keys.contains("V") || tested-keys.contains("v");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "B";
                            is-tested: tested-keys.contains("B") || tested-keys.contains("b");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "N";
                            is-tested: tested-keys.contains("N") || tested-keys.contains("n");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "M";
                            is-tested: tested-keys.contains("M") || tested-keys.contains("m");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: ",";
                            shift-text: "<";
                            is-tested: tested-keys.contains(",") || tested-keys.contains("<");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: ".";
                            shift-text: ">";
                            is-tested: tested-keys.contains(".") || tested-keys.contains(">");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "/";
                            shift-text: "?";
                            is-tested: tested-keys.contains("/") || tested-keys.contains("?");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "â‡§";
                            key-width: 95px;
                            is-tested: tested-keys.contains("Shift");
                            clicked(key) => { key-clicked("Shift"); }
                        }
                    }
                    
                    // Space bar row
                    HorizontalBox {
                        spacing: 6px;
                        alignment: center;
                        
                        KeyButton {
                            text: "Ctrl";
                            key-width: 65px;
                            is-tested: tested-keys.contains("Control");
                            clicked(key) => { key-clicked("Control"); }
                        }
                        KeyButton {
                            text: "Alt";
                            key-width: 55px;
                            is-tested: tested-keys.contains("Alt");
                            clicked(key) => { key-clicked(key); }
                        }
                        SpaceKey {
                            is-tested: tested-keys.contains(" ") || tested-keys.contains("Space");
                            clicked(key) => { key-clicked(" "); }
                        }
                        KeyButton {
                            text: "Alt";
                            key-width: 55px;
                            is-tested: tested-keys.contains("Alt");
                            clicked(key) => { key-clicked(key); }
                        }
                        KeyButton {
                            text: "Ctrl";
                            key-width: 65px;
                            is-tested: tested-keys.contains("Control");
                            clicked(key) => { key-clicked("Control"); }
                        }
                    }
                }
            }
        }
    }
}
